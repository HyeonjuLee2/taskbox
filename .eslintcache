[{"C:\\Project\\taskbox\\src\\stories\\Button.js":"1","C:\\Project\\taskbox\\src\\App.js":"2","C:\\Project\\taskbox\\src\\components\\Task.js":"3","C:\\Project\\taskbox\\src\\reportWebVitals.js":"4","C:\\Project\\taskbox\\src\\components\\Task.stories.js":"5","C:\\Project\\taskbox\\src\\components\\TaskList.stories.js":"6","C:\\Project\\taskbox\\src\\lib\\redux.js":"7","C:\\Project\\taskbox\\src\\components\\TaskList.js":"8","C:\\Project\\taskbox\\src\\components\\InboxScreen.stories.js":"9","C:\\Project\\taskbox\\src\\components\\InboxScreen.js":"10"},{"size":1101,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":528,"mtime":1606202523868,"results":"13","hashOfConfig":"12"},{"size":1816,"mtime":1606467520626,"results":"14","hashOfConfig":"12"},{"size":362,"mtime":1606202523868,"results":"15","hashOfConfig":"12"},{"size":1446,"mtime":1606469172976,"results":"16","hashOfConfig":"12"},{"size":1626,"mtime":1606459916608,"results":"17","hashOfConfig":"12"},{"size":1799,"mtime":1606459452342,"results":"18","hashOfConfig":"12"},{"size":2277,"mtime":1606460248652,"results":"19","hashOfConfig":"12"},{"size":816,"mtime":1606463507746,"results":"20","hashOfConfig":"12"},{"size":1105,"mtime":1606466200514,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"e4xc76",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Project\\taskbox\\src\\stories\\Button.js",[],"C:\\Project\\taskbox\\src\\App.js",[],"C:\\Project\\taskbox\\src\\components\\Task.js",[],"C:\\Project\\taskbox\\src\\reportWebVitals.js",[],"C:\\Project\\taskbox\\src\\components\\Task.stories.js",["44"],"C:\\Project\\taskbox\\src\\components\\TaskList.stories.js",["45"],"import React from 'react';\r\n\r\nimport { PureTaskList } from './TaskList';\r\nimport * as TaskStories from './Task.stories';\r\n\r\nexport default {\r\n    component: PureTaskList,\r\n    title: 'TaskList',\r\n    decorators: [story => <div style={{ padding: '3rem' }}>{story()}</div>],\r\n};\r\n\r\nconst Template = args => <PureTaskList {...args} />;\r\n\r\nexport const Default = Template.bind({});\r\nDefault.args = {\r\n    // Shaping the stories through args composition.\r\n    // The data was inherited the Default story in task.stories.js.\r\n    tasks: [\r\n        { ...TaskStories.Default.args.task, id: '1', title: 'Task 1' },\r\n        { ...TaskStories.Default.args.task, id: '2', title: 'Task 2' },\r\n        { ...TaskStories.Default.args.task, id: '3', title: 'Task 3' },\r\n        { ...TaskStories.Default.args.task, id: '4', title: 'Task 4' },\r\n        { ...TaskStories.Default.args.task, id: '5', title: 'Task 5' },\r\n        { ...TaskStories.Default.args.task, id: '6', title: 'Task 6' },\r\n    ],\r\n};\r\n\r\nexport const WithPinnedTasks = Template.bind({});\r\nWithPinnedTasks.args = {\r\n    // Shaping the stories through args composition.\r\n    // Inherited data coming from the Default story.\r\n    tasks: [\r\n        ...Default.args.tasks.slice(0, 5),\r\n        { id: '6', title: 'Task 6 (pinned)', state: 'TASK_PINNED' },\r\n    ],\r\n};\r\n\r\nexport const Loading = Template.bind({});\r\nLoading.args = {\r\n    tasks: [],\r\n    loading: true,\r\n};\r\n\r\nexport const Empty = Template.bind({});\r\nEmpty.args = {\r\n    // Shaping the stories through args composition.\r\n    // Inherited data coming from the Loading story.\r\n    ...Loading.args,\r\n    loading: false,\r\n};","C:\\Project\\taskbox\\src\\lib\\redux.js",[],"C:\\Project\\taskbox\\src\\components\\TaskList.js",[],"C:\\Project\\taskbox\\src\\components\\InboxScreen.stories.js",["46"],"import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { action } from '@storybook/addon-actions';\r\nimport { PureInboxScreen } from './InboxScreen';\r\nimport * as TaskListStories from './TaskList.stories';\r\n\r\n// A super-simple mock of a redux store\r\nconst store = {\r\n    getState: () => {\r\n        return {\r\n            tasks: TaskListStories.Default.args.tasks,\r\n        };\r\n    },\r\n    subscribe: () => 0,\r\n    dispatch: action('dispatch'),\r\n};\r\n\r\nexport default {\r\n    component: PureInboxScreen,\r\n    decorators: [story => <Provider store={store}>{story()}</Provider>],\r\n    title: 'InboxScreen',\r\n};\r\n\r\nconst Template = args => <PureInboxScreen {...args} />;\r\n\r\nexport const Default = Template.bind({});\r\n\r\nexport const Error = Template.bind({});\r\nError.args = {\r\n    error: 'Something',\r\n};","C:\\Project\\taskbox\\src\\components\\InboxScreen.js",[],{"ruleId":"47","severity":1,"message":"48","line":5,"column":1,"nodeType":"49","endLine":19,"endColumn":3},{"ruleId":"47","severity":1,"message":"48","line":6,"column":1,"nodeType":"49","endLine":10,"endColumn":3},{"ruleId":"47","severity":1,"message":"48","line":18,"column":1,"nodeType":"49","endLine":22,"endColumn":3},"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration"]